require('dotenv').config();
const { 
  Client, GatewayIntentBits, Partials, ActionRowBuilder, ButtonBuilder, ButtonStyle, SlashCommandBuilder, Routes 
} = require('discord.js');
const { REST } = require('@discordjs/rest');

// โ ุฃุถู ูุฐุง ุงูุฌุฒุก ููุง (ุณูุฑูุฑ ููุจ ุตุบูุฑ ููุจูู Replit ุดุบุงู)
const express = require('express');
const app = express();

app.get('/', (req, res) => res.send('โ Bot is online and running 24/7!'));
app.listen(3000, () => console.log('๐ Web server is running to keep bot alive.'));
// โ ุงูุชูู ุงูุฌุฒุก ุงูุฐู ูุฎุต ุงูุชุดุบูู ุงูุฏุงุฆู

const client = new Client({
  intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent],
  partials: [Partials.Channel],
});

const token = process.env.TOKEN;
const guildId = process.env.GUILD_ID;
const clientId = process.env.CLIENT_ID;

// ==================== ุจูุงูุงุช ุงูุฃูุนุงุจ (ุจุฏูู ุชุบููุฑ ุงููุญุชูู ุงูุฐู ุฃุนุทูุชู ุณุงุจูุงู) ====================
const games = {
  '๐งฎ ุฑูุงุถูุงุช': [
    { question: '7 ร 6 - 2 = ?', choices: ['41', '40', '42'], answer: '40' },
    { question: '12 รท 4 + 5 = ?', choices: ['10', '9', '8'], answer: '8' },
    { question: '15 โ 3 ร 7 = ?', choices: ['-5', '-6', '-7'], answer: '-6' },
    { question: '8 + 8 รท 2 = ?', choices: ['12', '16', '14'], answer: '12' },
    { question: '7 ร 7 โ 7 + 7 รท 7 = ?', choices: ['7', '0', '43'], answer: '43' },
    { question: '20 รท 5 + 15 = ?', choices: ['17', '19', '18'], answer: '19' },
    { question: '9 ร 3 โ 8 = ?', choices: ['19', '27', '20'], answer: '19' },
    { question: '10 + 4 ร 3 + 1 = ?', choices: ['23', '20', '27'], answer: '23' },
    { question: '18 รท 3 + 7 = ?', choices: ['13', '14', '15'], answer: '13' },
    { question: '100 โ 9 ร 8 = ?', choices: ['27', '26', '28'], answer: '28' },
  ],
  '๐ค ุญุฑูู': [
    { question: 'ุงูุญุฑูู: ู ู ุถ ู ุช โ', choices: ['ุชูููุถ','ุชูููุถ','ูููุถุช'], answer: 'ุชูููุถ' },
    { question: 'ุงูุญุฑูู: ู ุง ู ุง ุญ ุฉ โ', choices: ['ูุญุงูุงุฉ','ูุงุญุงูุฉ','ููุงุญุฉ'], answer: 'ูุญุงูุงุฉ' },
    { question: 'ุงูุญุฑูู: ู ุช ู ุถ ุง โ', choices: ['ุชูุงูุถ','ููุงุฏุช','ููุงุฏุช'], answer: 'ุชูุงูุถ' },
    { question: 'ุงูุญุฑูู: ุต ุง ุง ุก ุช ุณ ุน โ', choices: ['ุงุณุชุนุตุงุก','ุนุตุงุกุงุณุช','ุณุงุนุงุกุช'], answer: 'ุงุณุชุนุตุงุก' },
    { question: 'ุงูุญุฑูู: ุจ ุณ ุช ุน ุง ู โ', choices: ['ุงุณุชูุนุงุจ','ูุนุงุจุณุช','ุงุณุชูุนุจ'], answer: 'ุงุณุชูุนุงุจ' },
    { question: 'ุงูุญุฑูู: ู ู ุฉ ุถ ุน โ', choices: ['ูุนุถูุฉ','ุถููุนู','ุฏูุนูุฉ'], answer: 'ูุนุถูุฉ' },
    { question: 'ุงูุญุฑูู: ุท ุฑ ุง ุฏ ุณ ุช โ', choices: ['ุงุณุชุทุฑุงุฏ','ุทุฑุงุฏุณุช','ุฑุงุฏุงุณุชุท'], answer: 'ุงุณุชุทุฑุงุฏ' },
    { question: 'ุงูุญุฑูู: ู ุฉ ู ู ู ุช ุง โ', choices: ['ูุชูุงููุฉ','ุชูุงูููุฉ','ูุงููุฉูุช'], answer: 'ูุชูุงููุฉ' },
    { question: 'ุงูุญุฑูู: ุค ุท ุช ู ุง โ', choices: ['ุชูุงุทุค','ูุทุฃุชู','ุคุทุงูุช'], answer: 'ุชูุงุทุค' },
    { question: 'ุงูุญุฑูู: ุฑ ุจ ุง ุช ุต ุง ุณ โ', choices: ['ุงุณุชุจุตุงุฑ','ุตุจุฑุงุณุช','ุฑุงุจุงุณุชุต'], answer: 'ุงุณุชุจุตุงุฑ' },
    { question: 'ุงูุญุฑูู: ุฑ ุฉ ุง ุช ุน ุณ โ', choices: ['ุงุณุชุนุงุฑุฉ','ุนุงุฑุฉุณุช','ุฑุนุฉุงุณุช'], answer: 'ุงุณุชุนุงุฑุฉ' },
    { question: 'ุงูุญุฑูู: ุฒ ู ุง ุฎ ุช โ', choices: ['ุงุฎุชุฒุงู','ุฒุงูุฎูุช','ุชูุฎูุงุฒ'], answer: 'ุงุฎุชุฒุงู' },
    { question: 'ุงูุญุฑูู: ุฑ ู ุฉ ุบ ุง ู โ', choices: ['ูุบุงูุฑุฉ','ุบุงูุฑุฉู','ูุฑุงูุบู'], answer: 'ูุบุงูุฑุฉ' },
    { question: 'ุงูุญุฑูู: ู ุท ุช ุง ุน โ', choices: ['ุชูุงุทุน','ูุงุทุชุน','ุนุชูุงู'], answer: 'ุชูุงุทุน' },
    { question: 'ุงูุญุฑูู: ุญ ุง ุฑ ุง ุณ ุถ ุช โ', choices: ['ุงุณุชุญุถุงุฑ','ุญุถุฑุงุณุช','ุฑุญุงุฏุณุช'], answer: 'ุงุณุชุญุถุงุฑ' },
    { question: 'ุงูุญุฑูู: ุจ ุช ุน ู ุด โ', choices: ['ูุชุดุนุจ','ุดุนุจูุช','ุจูุชุดุน'], answer: 'ูุชุดุนุจ' },
    { question: 'ุงูุญุฑูู: ุถ ู ุช ู ุง ู โ', choices: ['ูุชูุงูุถ','ููุฏูุชุง','ุถูุชูุงู'], answer: 'ูุชูุงูุถ' },
    { question: 'ุงูุญุฑูู: ุฎ ุณ ุง ู ุง ุช โ', choices: ['ุงุณุชูุณุงุฎ','ูุณุงุฎุงุณุช','ุณุงูุฎุงุณุช'], answer: 'ุงุณุชูุณุงุฎ' },
    { question: 'ุงูุญุฑูู: ุง ุถ ุช ุฏ โ', choices: ['ุชุถุงุฏ','ุฏุงุฏุช','ุถุฏุช'], answer: 'ุชุถุงุฏ' },
    { question: 'ุงูุญุฑูู: ู ุง ุง ู ุช ู ุณ โ', choices: ['ุงุณุชููุงู','ูููุงุณุชู','ููุงูุณุช'], answer: 'ุงุณุชููุงู' },
    { question: 'ุงูุญุฑูู: ู ุฑ ุน ุช ู โ', choices: ['ูุชูุฑุน','ูุฑูุนุช','ุนูุชูุฑ'], answer: 'ูุชูุฑุน' },
    { question: 'ุงูุญุฑูู: ุง ุณ ู ู ุช ุง ุก โ', choices: ['ุงุณุชุฆูุงู','ููุงุงุณุช','ููุงุณุฆุช'], answer: 'ุงุณุชุฆูุงู' },
    { question: 'ุงูุญุฑูู: ุฏ ุช ุฑ ุฌ โ', choices: ['ุชุฏุฑุฌ','ุฏุฑุฌุช','ุฌุฑุฏุช'], answer: 'ุชุฏุฑุฌ' },
    { question: 'ุงูุญุฑูู: ุช ู ู ุจ ุง ู โ', choices: ['ูุชุจุงูู','ููุจุชู','ุจุงุชููู'], answer: 'ูุชุจุงูู' },
    { question: 'ุงูุญุฑูู: ุท ุง ู ุง ุณ ุช ุจ โ', choices: ['ุงุณุชุจุทุงู','ุจุทุงูุงุณุช','ูุงุจุทุงุณุช'], answer: 'ุงุณุชุจุทุงู' },
    { question: 'ุงูุญุฑูู: ุช ู ุธ ุญ ู โ', choices: ['ูุชุญูุธ','ุชุญููุธ','ููุชุญุซ'], answer: 'ูุชุญูุธ' },
    { question: 'ุงูุญุฑูู: ุก ุฒ ุง ุณ ู ุช ุง โ', choices: ['ุงุณุชูุฒุงุก','ูุฒุงุกุณุช','ุฃุณุชูุฒุง'], answer: 'ุงุณุชูุฒุงุก' },
    { question: 'ุงูุญุฑูู: ุฌ ุฑ ุช ุฏ โ', choices: ['ุชุฌุฑุฏ','ุฏุฑุฌุช','ุฌุชุฑุฏ'], answer: 'ุชุฌุฑุฏ' },
    { question: 'ุงูุญุฑูู: ู ู ุช ุด ุง ุณ โ', choices: ['ุงุณุชุดูุงู','ุดูุงูุณุช','ูุงุณุชุดู'], answer: 'ุงุณุชุดูุงู' },
    { question: 'ุงูุญุฑูู: ุฑ ุจ ุง ุช ุถ โ', choices: ['ุชุถุงุฑุจ','ุฑุงุจุชุถ','ุถุฑุจุงุช'], answer: 'ุชุถุงุฑุจ' },
  ],
  'โโ ุตุญ ุฃู ุฎุทุฃ': [
    { question: 'ุงูุงุณุชูุงุฑุฉ ูู ูุฏุฑุฉ ุงูุนูู ุนูู ููู ุงูุฃููุฑ ุจูุถูุญ.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุชูุงูุถ ูุนูู ุงุชูุงู ููุฑุชูู ูุชุนุงุฑุถุชูู.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงููุนุถูุฉ ูู ุญู ุจุณูุท ููุงุถุญ.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุงุณุชุจุทุงู ูู ุงููุธุฑ ุฏุงุฎู ุงูููุณ ูุชูุณูุฑ ุงูุณููู.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุงุณุชุฏูุงู ูู ุนูููุฉ ุงุชุฎุงุฐ ูุฑุงุฑ ุจุฏูู ุฃู ุฏููู.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุงุณุชุทุฑุงุฏ ูุนูู ุงูุงุจุชุนุงุฏ ุนู ุงูููุถูุน ุงูุฃุณุงุณู ูู ุงูุญุฏูุซ.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุงุณุชุนุงุฑุฉ ูุบุฉู ูู ุงูุชุดุจูู ุจุงุณุชุฎุฏุงู ูููุฉ ุจุดูู ุญุฑูู ููุท.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุงุณุชุนุตุงุก ูุนูู ุณูููุฉ ุงูุญู.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุชูุงุทุค ูุนูู ุชุนุงูู ูุฌููุนุฉ ุนูู ูุนู ุดูุก ุฎูู ุฃู ุบูุฑ ูุงูููู.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุงุณุชุจุตุงุฑ ูุนูู ุงููุฏุฑุฉ ุนูู ุฑุคูุฉ ุงููุณุชูุจู ุจุฏูุฉ.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุงุณุชูุจุงุท ูุนูู ุงุณุชูุชุงุฌ ุงูุญูุงุฆู ูู ุงูุฃุฏูุฉ.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุงุณุชูุณุงุฎ ูู ุฅูุดุงุก ูุณุฎุฉ ูุทุงุจูุฉ ููููุง ูู ุดูุก ูุนูู.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงููุชุดุนุจ ูุนูู ุดูุก ุจุณูุท ููุจุงุดุฑ.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุงุณุชุดูุงู ูุนูู ููู ุงูุฃููุฑ ุนู ุทุฑูู ุงูุงุณุชูุชุงุฌ ูุงูููุงุญุธุฉ.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุชุถุงุฑุจ ูุนูู ุงุชูุงู ูุงูู ุจูู ูุฌูุงุช ุงููุธุฑ.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุงุณุชุทูุงุน ูุนูู ุฌูุน ุงููุนูููุงุช ูุจู ุงุชุฎุงุฐ ุฃู ูุฑุงุฑ.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุชุฏุฑุฌ ูุนูู ุงูุงูุชูุงู ูู ูุฑุญูุฉ ุฅูู ุฃุฎุฑู ุจุดูู ููุงุฌุฆ.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุชูููู ูุนูู ุชุญููู ุงูุดูุก ุฅูู ุฃุฌุฒุงุฆู ูุชุณููู ุงูููู.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงูุงุณุชุซูุงุก ูุนูู ุดููู ูู ุงูุญุงูุงุช ุฏูู ุงุณุชุจุนุงุฏ ุฃู ุดูุก.', choices: ['โ', 'โ'], answer: 'โ' },
    { question: 'ุงููุชุจุงูู ูุนูู ุงุฎุชูุงู ูุงุถุญ ุจูู ุนูุงุตุฑ ุงูุดูุก.', choices: ['โ', 'โ'], answer: 'โ' },
  ],
  '๐ ุฃูุบุงุฒ': [
    { question: 'ุดูุก ูููุง ุฃุฎุฐุช ููู ูุจุฑุ ูุง ููุ', choices: ['ุงูุญูุฑุฉ', 'ุงูุธู', 'ุงูููุช'], answer: 'ุงูุญูุฑุฉ' },
    { question: 'ูุง ูู ุงูุดูุก ุงูุฐู ููุดู ูููู ูููุณ ูู ุฃุฑุฌูุ', choices: ['ุงูุณุงุนุฉ', 'ุงูุทุงููุฉ', 'ุงูุณูุงุฑุฉ'], answer: 'ุงูุณุงุนุฉ' },
    { question: 'ุดูุก ููุฌุฏ ูู ุงูุณูุงุก ูููุณ ุนูู ุงูุฃุฑุถุ ูุง ููุ', choices: ['ุงูุณุญุงุจ', 'ุงูุญุฌุฑ', 'ุงููุงุก'], answer: 'ุงูุณุญุงุจ' },
    { question: 'ุฃูุง ุดูุฆุงู ูุชุถุงุฏุงูุ ูููู ูุง ููููู ุงููุตู ุจููููุงุ ูุง ููุงุ', choices: ['ุงูุธูุงู ูุงูููุฑ', 'ุงูุญุฑุงุฑุฉ ูุงูุจุฑูุฏุฉ', 'ุงูุญูุงุฉ ูุงูููุช'], answer: 'ุงูุธูุงู ูุงูููุฑ' },
      { question: 'ูููุง ุญุงููุช ุงูุณูุทุฑุฉ ุนููุ ุฃููุช ูููุ ููุง ุฒูุช ููุฌูุฏุงู ูู ูู ูุญุธุฉุ ูุง ุฃูุงุ', choices: ['ุงูุฒูู', 'ุงููุนู', 'ุงููุฏุฑ'], answer: 'ุงูุฒูู' },
      { question: 'ุฃูุง ุจุฏุงูุฉ ูู ูุฑุงุฑ ูููุงูุฉ ูู ููุฑุฉุ ูุง ููููู ุฑุคูุชู ููู ุชุญุฏุฏ ูุตูุฑูุ ูุง ุฃูุงุ', choices: ['ุงูุนูู', 'ุงูุฅุฑุงุฏุฉ', 'ุงูุฒูุงู'], answer: 'ุงูุฅุฑุงุฏุฉ' },
      { question: 'ุฃูุง ุดูุก ูุง ููุฑูุ ููู ูู ูุง ุญููู ูุชุฃุซุฑ ุจูุ ูุง ุฃูุงุ', choices: ['ุงููุนู', 'ุงููุฏุฑ', 'ุงูุฒูู'], answer: 'ุงููุนู' },
      { question: 'ุฃูุง ุญุฑ ุจูุง ุญุฏูุฏุ ูุฃุญูุงููุง ูููุฏู ุชุฒูุฏ ูู ููุชูุ ูุง ุฃูุงุ', choices: ['ุงูููุฑ', 'ุงูุฑูุญ', 'ุงูุฅุฑุงุฏุฉ'], answer: 'ุงูููุฑ' },
      { question: 'ุฃูุง ููุฌูุฏ ูู ูู ุดูุกุ ูุฃุญูุงููุง ูุง ุชุดุนุฑ ุจูุ ูููู ุฃุบูุฑ ูู ุดูุกุ ูุง ุฃูุงุ', choices: ['ุงูุฒูู', 'ุงููุนุฑูุฉ', 'ุงูุญูุงุฉ'], answer: 'ุงููุนุฑูุฉ' },
      { question: 'ุฃุญูุงููุง ุฃููู ุถูุกูุง ูุฃุญูุงููุง ุธูุงููุงุ ุฃุคุซุฑ ุนูู ูู ุฑูุญุ ูุง ุฃูุงุ', choices: ['ุงูุฃุฎูุงู', 'ุงููุนู', 'ุงููุฏุฑ'], answer: 'ุงูุฃุฎูุงู' },
      { question: 'ุฃูุง ุดูุก ูุฑุจุท ุงููุงุถู ุจุงูุญุงุถุฑ ูุงููุณุชูุจูุ ูุง ูููู ููุณู ููู ููุญุณุ ูุง ุฃูุงุ', choices: ['ุงูุฒูู', 'ุงููุนู', 'ุงูุฐุงูุฑุฉ'], answer: 'ุงูุฒูู' },
      { question: 'ุฃูุง ููุชุงุญ ุงูุญุฑูุฉ ูููู ูุง ูููู ุงูุชูุงููุ ูุง ุฃูุงุ', choices: ['ุงููุนุฑูุฉ', 'ุงูุฅุฑุงุฏุฉ', 'ุงูุญูููุฉ'], answer: 'ุงููุนุฑูุฉ' },
      { question: 'ูู ุดุฎุต ูุณุนู ุฅูููุ ููุน ุฐูู ูุง ูููู ุงูุฅูุณุงู ุจูุ ูุง ุฃูุงุ', choices: ['ุงูุณุนุงุฏุฉ', 'ุงูุญูููุฉ', 'ุงููุฌุงุญ'], answer: 'ุงูุณุนุงุฏุฉ' },
      { question: 'ุฃูุง ุงูุญูููุฉ ุงูุชู ุชุจุญุซ ุนููุง ุงูุนูููุ ููู ูุง ูุฑุงูุง ุงูุฌููุนุ ูุง ุฃูุงุ', choices: ['ุงููุงูุน', 'ุงูุญููุฉ', 'ุงููุนู'], answer: 'ุงููุงูุน' },
      { question: 'ุฃูุง ุดูุก ูููุฏ ูู ุงูููุฑ ูุฃุญูุงููุง ููุชู ุงูุฅููุงูุ ูุง ุฃูุงุ', choices: ['ุงูุดู', 'ุงููุนุฑูุฉ', 'ุงูุฅุจุฏุงุน'], answer: 'ุงูุดู' },
      { question: 'ุฃูุง ูุง ุฃุชุญุฑูุ ููู ูู ุดูุก ูุชุญุฑู ูู ุญูููุ ูุง ุฃูุงุ', choices: ['ุงูุฒูุงู', 'ุงูุนูู', 'ุงููุฏุฑ'], answer: 'ุงููุฏุฑ' },
      { question: 'ุฃูุง ุงูุดูุก ุงูุฐู ูุบูุฑ ุงูุนุงูู ุฑุบู ุตูุชูุ ูุง ุฃูุงุ', choices: ['ุงูููุฑุฉ', 'ุงูุฑูุญ', 'ุงููุนู'], answer: 'ุงูููุฑุฉ' },
      { question: 'ุฃูุง ุดูุก ููุฌูุฏ ูู ูู ููุจ ูุนููุ ุฃุญูุงููุง ุฃุณูุทุฑ ูุฃุญูุงููุง ุฃุฎุชููุ ูุง ุฃูุงุ', choices: ['ุงูุญุจ', 'ุงููุนู', 'ุงูุทููุญ'], answer: 'ุงููุนู' }
  ],
  '๐ก ูุนูููุงุช ุนุงูุฉ': [
  { question: 'ูุง ุนุงุตูุฉ ุฏููุฉ ุจูุชุงูุ', choices: ['ุชูููู', 'ูุงูุจุงูุง', 'ููููุง'], answer: 'ุชูููู' },
    { question: 'ูู ูุชุจ ูุชุงุจ "ุงูุฌูููุฑูุฉ"ุ', choices: ['ุฃููุงุทูู', 'ุฃุฑุณุทู', 'ุณูุฑุงุท'], answer: 'ุฃููุงุทูู' },
    { question: 'ุฃู ุฏููุฉ ููุง ุฃูุจุฑ ุนุฏุฏ ูู ุงููุบุงุช ุงูุฑุณููุฉุ', choices: ['ุฌููุจ ุฃูุฑูููุง', 'ุงูููุฏ', 'ุณููุณุฑุง'], answer: 'ุฌููุจ ุฃูุฑูููุง' },
    { question: 'ูู ุฃู ูุงุฑุฉ ุชูุน ุฏููุฉ ุจูุฑููุฏูุ', choices: ['ุฃูุฑูููุง', 'ุขุณูุง', 'ุฃูุฑููุง ุงูุฌููุจูุฉ'], answer: 'ุฃูุฑูููุง' },
    { question: 'ูุง ุงุณู ุฃูู ูุนุจุฉ ููุฏูู ุชู ุฅุทูุงููุง ุชุฌุงุฑูุงูุ', choices: ['Pong', 'Tennis for Two', 'Spacewar!'], answer: 'Pong' },
    { question: 'ูู ูู ูุคุณุณ ุงูุฏูุงูุฉ ุงูุฒุฑุงุฏุดุชูุฉุ', choices: ['ุฒุฑุงุฏุดุช', 'ุจูุฐุง', 'ูููููุดููุณ'], answer: 'ุฒุฑุงุฏุดุช' },
    { question: 'ุฃู ุจุญุฑ ููุตู ุจูู ุฃูุฑูุจุง ูุฃูุฑูููุงุ', choices: ['ุงูุจุญุฑ ุงูุฃุจูุถ ุงููุชูุณุท', 'ุงูุจุญุฑ ุงูุฃุณูุฏ', 'ุงูุจุญุฑ ุงูุฃุญูุฑ'], answer: 'ุงูุจุญุฑ ุงูุฃุจูุถ ุงููุชูุณุท' },
    { question: 'ูุง ุงุณู ุฃุทูู ููุฑ ูู ูุงุฑุฉ ุขุณูุงุ', choices: ['ุงููุงูุบุชุณู', 'ุงููุงูุบ', 'ุงูุบุงูุฌ'], answer: 'ุงููุงูุบุชุณู' },
    { question: 'ูู ูู ูุคูู ูุชุงุจ "ููุฐุง ุชููู ุฒุฑุงุฏุดุช"ุ', choices: ['ููุชุดู', 'ููุบู', 'ูุงูุท'], answer: 'ููุชุดู' },
    { question: 'ุฃู ุฏููุฉ ุชูุนุฑู ุจุงุณู "ุฃุฑุถ ุงููููุฉ ูุงูุฌุจุงู"ุ', choices: ['ุงูููุฏ', 'ุชุงููุงูุฏ', 'ููุจุงู'], answer: 'ููุจุงู' },
    { question: 'ูุง ุงุณู ุงูุนููุฉ ุงูุฑุณููุฉ ูุฏููุฉ ููุจุงูุ', choices: ['ุฑูุจูุฉ ููุจุงููุฉ', 'ุฑูุจู', 'ุจุงููุฏ'], answer: 'ุฑูุจูุฉ ููุจุงููุฉ' },
    { question: 'ูุง ูู ุฃุนูู ุฌุจู ูู ูุงุฑุฉ ุฃูุฑููุง ุงูุฌููุจูุฉุ', choices: ['ุฃููููุงุบูุง', 'ุฅููุฑุณุช', 'ูููููุฌุงุฑู'], answer: 'ุฃููููุงุบูุง' },
    { question: 'ูุง ุงูุฏููุฉ ุงูุชู ุงุฎุชุฑุนุช ุงููุฑูุ', choices: ['ุงูุตูู', 'ุงููุงุจุงู', 'ูุตุฑ'], answer: 'ุงูุตูู' },
    { question: 'ูู ูู ูุคุณุณ ุงูููุณูุฉ ุงูุฑูุงููุฉุ', choices: ['ุฒูููู ุงูุฑูุงูู', 'ุฃููุงุทูู', 'ุฃุฑุณุทู'], answer: 'ุฒูููู ุงูุฑูุงูู' },
    { question: 'ุฃู ุฏููุฉ ูุฏููุง ุฃุทูู ุฎุท ุณุงุญูู ูู ุงูุนุงููุ', choices: ['ููุฏุง', 'ุฑูุณูุง', 'ุฃุณุชุฑุงููุง'], answer: 'ููุฏุง' },
    { question: 'ูุง ุงุณู ุฃูู ูุฏููุฉ ูู ุงูุนุงูู ุงุณุชุฎุฏูุช ุงูููุฑุจุงุก ุงูุนุงูุฉุ', choices: ['ููุฏู', 'ูููููุฑู', 'ุจุงุฑูุณ'], answer: 'ููุฏู' },
    { question: 'ูู ุฃู ุฏููุฉ ููุน ูุนุจุฏ ุงููุฑููุ', choices: ['ูุตุฑ', 'ุงููููุงู', 'ุชุฑููุง'], answer: 'ูุตุฑ' },
    { question: 'ูุง ุงุณู ุฃูุจุฑ ุตุญุฑุงุก ูู ุงูุนุงููุ', choices: ['ุงูุตุญุฑุงุก ุงููุจุฑู', 'ุตุญุฑุงุก ุบูุจู', 'ุตุญุฑุงุก ูุงููุงุฑู'], answer: 'ุงูุตุญุฑุงุก ุงููุจุฑู' },
    { question: 'ุฃู ุฏููุฉ ุฃุณุณุช ุงูุฅูุจุฑุงุทูุฑูุฉ ุงูุนุซูุงููุฉุ', choices: ['ุชุฑููุง', 'ุงููููุงู', 'ุงูุนุฑุงู'], answer: 'ุชุฑููุง' },
    { question: 'ูู ูู ูุคุณุณ ุงููุฐูุจ ุงูููุณูู ุงูุฏููุงุฑุชูุ', choices: ['ุฏููุงุฑุช', 'ุฃููุงุทูู', 'ููุบู'], answer: 'ุฏููุงุฑุช' }
  ],
  '๐ฎ Guess the Emoji': [
    { question: '๐ฆ๐', choices: ['The Lion King', 'Simba', 'King of Beasts'], answer: 'The Lion King' },
    { question: '๐ฌ๐๐ฅ', choices: ['Casablanca', 'Marrakech Express', 'Razzia'], answer: 'Casablanca' },
    { question: '๐งโโ๏ธ๐', choices: ['Harry Potter', 'The Lord of the Rings', 'Merlin'], answer: 'The Lord of the Rings' },
    { question: '๐ต๐๐ฝ๐บ๐ฝ', choices: ['Hoba Hoba Spirit - 7 Class', 'Hatim Ammor - Mchiti Fiha', 'Fnaire - L7al'], answer: 'Hoba Hoba Spirit - 7 Class' },
    { question: '๐โก', choices: ['Fast & Furious', 'Tesla', 'Lightning McQueen'], answer: 'Lightning McQueen' },
    { question: '๐ค๐ฒ๐ฆ๐', choices: ['Cheb Khaled - Cโest La Vie', 'Saad Lamjarred - Ghaltana', 'Douzi - Laayoune'], answer: 'Saad Lamjarred - Ghaltana' },
    { question: '๐๐๐', choices: ['Game of Thrones', 'Romeo & Juliet', 'Hamlet'], answer: 'Game of Thrones' },
    { question: '๐ค๐๐', choices: ['Saad Lamjarred - Lm3allem', 'Asmaa Lamnawar - Ma Tfarkesh', 'Douzi - Galbi'], answer: 'Saad Lamjarred - Lm3allem' },
    { question: '๐ฆ๐๏ธ', choices: ['Jurassic Park', 'King Kong', 'The Lost World'], answer: 'Jurassic Park' },
    { question: '๐ฌ๐๐๏ธ', choices: ['Razzia', 'Ali Zaoua', 'Casablanca'], answer: 'Razzia' },
    { question: '๐๏ธ๐', choices: ['Interstellar', 'Inception', '2001: A Space Odyssey'], answer: 'Interstellar' },
    { question: '๐ต๐๐๏ธ', choices: ['Hatim Ammor - Douni Liya', 'Fnaire - Smahli', 'Manal - Slay'], answer: 'Fnaire - Smahli' },
    { question: '๐ธ๐จโ๐ค๐จโ๐ค', choices: ['Queen', 'The Beatles', 'Coldplay'], answer: 'Queen' },
    { question: '๐คโค๏ธ๐ฅ', choices: ['Saad Lamjarred - Ana Machi Sahel', 'Douzi - Mazal', 'Asmaa Lamnawar - Hayati'], answer: 'Saad Lamjarred - Ana Machi Sahel' },
    { question: '๐ท๏ธ๐ง', choices: ['Spider-Man', 'Ant-Man', 'Batman'], answer: 'Spider-Man' },
    { question: '๐ฌ๐๏ธ๐งญ', choices: ['Ali Zaoua', 'Casablanca', 'Adieu Carmen'], answer: 'Ali Zaoua' },
    { question: '๐งโโ๏ธ๐๏ธ', choices: ['The Walking Dead', 'Resident Evil', 'World War Z'], answer: 'The Walking Dead' },
    { question: '๐ต๐ถ๐', choices: ['Manal - T3ish', 'Hatim Ammor - 3lik', 'Hoba Hoba Spirit - 7 Class'], answer: 'Manal - T3ish' },
    { question: '๐ช๐๐', choices: ['Apollo 11', 'Interstellar', 'Gravity'], answer: 'Apollo 11' },
    { question: '๐ฌ๐ต๏ธโโ๏ธ๐ช', choices: ['Razzia', 'Zero', 'Marrakech Express'], answer: 'Zero' },
    { question: '๐งโโ๏ธโก', choices: ['Harry Potter', 'The Hobbit', 'Merlin'], answer: 'Harry Potter' },
    { question: '๐ฆ๐ฆ๐๏ธ', choices: ['Fantastic Mr. Fox', 'Zootopia', 'Robin Hood'], answer: 'Fantastic Mr. Fox' },
    { question: '๐ฆ๐', choices: ['My Little Pony', 'The Last Unicorn', 'Shrek'], answer: 'The Last Unicorn' },
    { question: '๐ฆธโโ๏ธ๐ก๏ธ๐บ๐ธ', choices: ['Captain America', 'Iron Man', 'Thor'], answer: 'Captain America' },
  ],
  '๐ ุฃุนูุงู ุงูุฏูู': [
    { question: '๐ฒ๐ญ', choices: ['ูุงุฑุดุงู', 'ูุงูุทุง', 'ููุฑูุดููุณ'], answer: 'ูุงุฑุดุงู' },
    { question: '๐น๐ฑ', choices: ['ุชูููุฑ ุงูุดุฑููุฉ', 'ุชููุณ', 'ุชุฑููุงูุณุชุงู'], answer: 'ุชูููุฑ ุงูุดุฑููุฉ' },
    { question: '๐ง๐ฟ', choices: ['ุจููุฒ', 'ุจูููููุง', 'ุจูุบูุงุฏูุด'], answer: 'ุจููุฒ' },
    { question: '๐ธ๐น', choices: ['ุณุงู ุชููู ูุจุฑููุณูุจ', 'ุณุงู ูุงุฑููู', 'ุณุงูุช ููุชุณ ูููููุณ'], answer: 'ุณุงู ุชููู ูุจุฑููุณูุจ' },
    { question: '๐ง๐ถ', choices: ['ุงูุจูููุฑ ุงููุงุฑูุจูุฉ', 'ุจุงุฑุจุงุฏูุณ', 'ุจุฑููุฏุง'], answer: 'ุงูุจูููุฑ ุงููุงุฑูุจูุฉ' },
    { question: '๐ฒ๐ฉ', choices: ['ูููุฏููุง', 'ูุฏุบุดูุฑ', 'ูุงูุทุง'], answer: 'ูููุฏููุง' },
    { question: '๐ฑ๐จ', choices: ['ุณุงูุช ููุณูุง', 'ุณุงูุช ููุณูุช', 'ุณุงูุช ููุชุณ ูููููุณ'], answer: 'ุณุงูุช ููุณูุง' },
    { question: '๐น๐ณ', choices: ['ุชููุณ', 'ููุจูุง', 'ุงูุฌุฒุงุฆุฑ'], answer: 'ุชููุณ' },
    { question: '๐จ๐ฒ', choices: ['ุงููุงููุฑูู', 'ุบูููุง ุงูุงุณุชูุงุฆูุฉ', 'ุฌุฒุฑ ุงูููุฑ'], answer: 'ุงููุงููุฑูู' },
    { question: '๐ฒ๐ฟ', choices: ['ููุฒูุจูู', 'ูุฏุบุดูุฑ', 'ููุฑูุดููุณ'], answer: 'ููุฒูุจูู' },
    { question: '๐จ๐พ', choices: ['ูุจุฑุต', 'ุฌูุฑุฌูุง', 'ูุงูุทุง'], answer: 'ูุจุฑุต' },
    { question: '๐ฌ๐ถ', choices: ['ุบูููุง ุงูุงุณุชูุงุฆูุฉ', 'ุบุงูุจูุง', 'ุบุงุจูู'], answer: 'ุบูููุง ุงูุงุณุชูุงุฆูุฉ' },
    { question: '๐ฆ๐ฉ', choices: ['ุฃูุฏูุฑุง', 'ุฃุฑููููุง', 'ุฃุฐุฑุจูุฌุงู'], answer: 'ุฃูุฏูุฑุง' },
    { question: '๐ฑ๐น', choices: ['ููุชูุงููุง', 'ูุงุชููุง', 'ูููุณูุจูุฑุบ'], answer: 'ููุชูุงููุง' },
    { question: '๐ง๐ฒ', choices: ['ุจุฑููุฏุง', 'ุจุงูุงูุงุณ', 'ุจุงุฑุจุงุฏูุณ'], answer: 'ุจุฑููุฏุง' },
    { question: '๐ณ๐บ', choices: ['ูููู', 'ููุฑู', 'ูุงูุฑู'], answer: 'ูููู' },
    { question: '๐ฐ๐ฒ', choices: ['ุฌุฒุฑ ุงูููุฑ', 'ููุฑูุจุงุชู', 'ููุจูุฏูุง'], answer: 'ุฌุฒุฑ ุงูููุฑ' },
    { question: '๐ต๐ฒ', choices: ['ุณุงูุช ุจููุฑ ููููููู', 'ุณุงูุช ููุณูุง', 'ุณุงูุช ููุชุณ ูููููุณ'], answer: 'ุณุงูุช ุจููุฑ ููููููู' },
    { question: '๐ธ๐ฒ', choices: ['ุณุงู ูุงุฑููู', 'ุณุงูุช ููุณูุช', 'ุณุงูุช ููุชุณ ูููููุณ'], answer: 'ุณุงู ูุงุฑููู' },
    { question: '๐ฑ๐ง', choices: ['ูุจูุงู', 'ุงูุฃุฑุฏู', 'ุณูุฑูุง'], answer: 'ูุจูุงู' },
  ],
  '๐ข ุชุณูุณู ุงูุฃุฑูุงู': [
    { question: '2, 4, 8, 16, ?', choices: ['20', '32', '18'], answer: '32' },
    { question: '5, 10, 15, 20, ?', choices: ['25', '30', '22'], answer: '25' },
    { question: '1, 1, 2, 3, 5, ?', choices: ['8', '7', '6'], answer: '8' },
    { question: '10, 20, 40, 80, ?', choices: ['160', '150', '120'], answer: '160' },
    { question: '3, 6, 9, 12, ?', choices: ['15', '16', '14'], answer: '15' },
    { question: '2, 4, 6, 8, ?', choices: ['10', '12', '9'], answer: '10' },
    { question: '1, 4, 9, 16, ?', choices: ['20', '25', '30'], answer: '25' },
    { question: '2, 3, 5, 7, 11, ?', choices: ['13', '12', '15'], answer: '13' },
    { question: '0, 1, 1, 2, 3, 5, ?', choices: ['7', '8', '6'], answer: '8' },
    { question: '1, 2, 4, 8, 16, ?', choices: ['24', '32', '30'], answer: '32' },
  ],
  // ุจุฑุง ุงูุณุงููุฉ ููุณุช ุจุญุงุฌุฉ ููุงุฆูุฉ ุฃุณุฆูุฉ โ ุงูููุถูุน ุณูุฎุชุงุฑ ุนุดูุงุฆูุงู ูู ุงููุงุฆูุฉ ุงูุฏุงุฎููุฉ
  'ุจุฑุง ุงูุณุงููุฉ': []
};

// ==================== ูุชุบูุฑุงุช ุงูุญุงูุฉ ุงูุนุงูุฉ ====================
let players = {}; // map userId -> { name, points }
let hostId = null;
let currentGame = null;
let currentQuestionIndex = 0;
let currentTimeout = null;
let playerAnswered = {}; // ูู ุฃุฌุงุจ ูู ุงูุณุคุงู ุงูุญุงูู ููุฃูุนุงุจ ุงูุนุงุฏูุฉ

// ==================== ูุชุบูุฑุงุช ุจุฑุง ุงูุณุงููุฉ ====================
let brasalfaImposterId = null;
let brasalfaTheme = null;
let brasalfaVotes = {}; // voterId -> votedId
let brasalfaVoteMessage = null;
let brasalfaTimerInterval = null;
let brasalfaTimerValue = 0;

// ูุงุฆูุฉ ุงูููุงุถูุน ููุจุฑุง ุงูุณุงููุฉ ููุง ุทูุจุช
const BRASALFA_THEMES = [
  'ุจูุฑุฉ','ุญุตุงู','ุทูู','ุญุงุณูุจ','ูุงุชู','ุฃูู','ูุงุก','ุณูุงุฑุฉ','ุทุงุฆุฑุฉ','ููููุฉ','ูุฏููุฉ','ูุชุงุจ','ููุฒู','VIP','ุณุฑูุฑ',
  'ุดุงุญู','ูุฑุณู','ุญุงููุช','ููุงุจุณ','ุทูุณ','ุณุงุนุฉ','ุญููุจุฉ','ููุชุงุญ','ุดุฌุฑุฉ','ูุฑุฏุฉ','ุจุงุจ','ูุงูุฐุฉ','ููู','ุญููุจุฉ ุณูุฑ',
  'ุฌุจู','ุจุญุฑ','ุฌุณุฑ','ูุทุฑ','ุณูุงุก','ูุฌูุฉ','ููุฑ','ุณุญุงุจ','ุทุฑูู','ูุท','ููุจ','ุฃุฑูุจ','ูุนุจุฉ','ุญุฐุงุก','ูุทุจุฎ','ุซูุงุฌุฉ',
  'ูุงููุฉ','ุฎุถุงุฑ','ููุณููู','ูุงุชู ุฐูู','ุจุญูุฑุฉ','ููุฑ','ุดุงุทุฆ','ุตุญุฑุงุก','ุบุงุจุฉ','ุฒูุฑุฉ','ุญุฏููุฉ','ุณูู','ูุทุนู','ูุณุชุดูู',
  'ูุฏุฑุณุฉ','ุฌุงูุนุฉ','ููุชุจุฉ','ูุณุฑุญ','ุณูููุง','ููุนุจ','ูุณุจุญ','ูุทุงุฑ','ูุญุทุฉ','ูุทุงุฑ','ุญุงููุฉ','ุณูููุฉ','ูุงุฑุจ','ููุชุงุญ ุณูุงุฑุฉ',
  'ูุญูุธุฉ','ูุธุงุฑุฉ','ูุจุนุฉ','ูุนุทู','ููุงุฒ','ุญุฐุงุก ุฑูุงุถู','ุญููุจุฉ ูุฏุฑุณูุฉ','ุจุทุงูุฉ','ุฌูุงุฒ ุณูุฑ','ุณุงุนุฉ ูุฏ','ูุงููุฑุง','ูููุฑูููู',
  'ููุญุฉ','ููุณููู ูุงุฏุฆุฉ','ุจูุงูู','ุบูุชุงุฑ','ุทุจูู','ููุงู','ุนูุฏ','ูููุฑูููู ูุงุณููู','ููุญุฉ ูููุฉ','ุชูุซุงู','ุตูุฑุฉ','ูุณุจุญุฉ',
  'ูุชุงุจ ุชุงุฑูุฎ','ุฑูุงูุฉ','ูุตุฉ ูุตูุฑุฉ','ุดุนุฑ','ูุตูุฏุฉ','ุฏูุชุฑ','ุฃููุงู ุชูููู','ูุณุทุฑุฉ','ูุญุงูุงุช','ูุณุทุฑุฉ ุญุฏูุฏูุฉ','ุขูุฉ ุญุงุณุจุฉ',
  'ููุจููุชุฑ ูุญููู','ููุญุฉ ููุงุชูุญ','ูุฃุฑุฉ','ุดุงุดุฉ','ุณูุงุนุงุช','ูููุฑูููู','ูุงุจู','ุจุทุงุฑูุฉ','ุดุงุญู ุณุฑูุน','ุณูุงุนุฉ ุฃุฐู','ุฑุงูุชุฑ',
  'ูุงุชู ูุญููู','ุชุงุจูุช','ุณุงุนุฉ ุฐููุฉ','ูุธุงุฑุงุช ูุงูุน ุงูุชุฑุงุถู','ููุจููุชุฑ ููุชุจู','ูุฑุต ุตูุจ','ุฐุงูุฑุฉ USB','ูุงููุฑุง ุฑูููุฉ',
  'ูุงููุฑุง ูุฑุงูุจุฉ','ุณูุงุนุฉ ุจููุชูุซ','ุญููุจุฉ ุฑูุงุถูุฉ','ููุงุจุณ ุณุจุงุญุฉ','ููุงุฒุงุช ุฑูุงุถูุฉ','ุญุฐุงุก ุชุณูู','ุฎูุฐุฉ','ุญููุจุฉ ุธูุฑ','ุฎุฑูุทุฉ',
  'ุจูุตูุฉ','ููุธุงุฑ','ุฎููุฉ','ูุฎูู','ูููุฏ','ูุฏุฑ','ููุงุนู','ุณูุงููู','ุดููุฉ','ุตุญู','ููุจ','ุฒุฌุงุฌุฉ ูุงุก','ูุฌุจุฉ','ูุทูุฑ','ุบุฏุงุก',
  'ุนุดุงุก','ุญูููุงุช','ููู','ุดููููุงุชุฉ','ุญููู','ููุงูู','ุฎุถุฑูุงุช','ุฎุจุฒ','ุญููุจ','ุฌุจู','ุจูุถ','ูุญู','ุฏุฌุงุฌ','ุณูู','ุฃุฑุฒ','ูุนูุฑููุฉ',
  'ุตูุตุฉ','ุฒูุช','ุฎู','ููุญ','ูููู','ุจูุงุฑุงุช','ุดุงู','ูููุฉ','ุนุตูุฑ','ูุงุก ุบุงุฒู','ุนุตูุฑ ุทุจูุนู','ูุซูุฌุงุช','ุดูุณ','ููุฑ','ูุฌูู',
  'ุณุญุงุจ','ุฑูุญ','ุซูุฌ','ูุทุฑ','ุนุงุตูุฉ','ุจุฑู','ุฑุนุฏ','ุตูู','ุดุชุงุก','ุฎุฑูู','ุฑุจูุน','ููุงุฑ','ููู','ุตุจุงุญ','ูุณุงุก','ุบุฑูุจ','ุดุฑูู',
  'ุฌุจุงู','ุชูุงู','ุณููู','ูุฏูุงู','ุตุญุฑุงุก','ุบุงุจุฉ','ููุฑ','ุจุญูุฑุฉ','ุดูุงู','ุดุงุทุฆ','ูุฑูุฃ','ูุฏููุฉ','ูุฑูุฉ','ุจูุฏุฉ','ุฌุฒูุฑุฉ',
  'ุณูููุฉ','ูุงุฑุจ','ุทุงุฆุฑุฉ','ูุทุงุฑ','ูุญุทุฉ ูุทุงุฑ','ุญุงููุฉ','ุณูุงุฑุฉ ุฃุฌุฑุฉ','ุฏุฑุงุฌุฉ','ุญูุงุฑ','ุญุตุงู','ุฌูู','ุทุฑูู','ุฌุณุฑ','ููู',
  'ุจูุงุจุฉ','ุจุงุจ','ูุงูุฐุฉ','ุณูู','ุญุงุฆุท','ุฃุฑุถูุฉ','ุณูู','ูุตุนุฏ','ุดูุฉ','ููุฒู','ูููุง','ูุตุฑ','ูุทุจุฎ','ุญูุงู','ุบุฑูุฉ ููู','ุบุฑูุฉ ูุนูุดุฉ',
  'ุญุฏููุฉ','ุดุฑูุฉ','ุณุทุญ','ุญูุถ ุณุจุงุญุฉ','ูุตุนุฏ','ูุตุนุฏ ููุฑุจุงุฆู','ุจุงุจ ุญุฏูุฏู','ุจูุงุจุฉ ุฎุดุจูุฉ','ููุงูุฐ ุฒุฌุงุฌูุฉ'
];


// ==================== ุชุณุฌูู ุฃูุงูุฑ ุณูุงุด ====================
const commands = [
  new SlashCommandBuilder().setName('startgames').setDescription('Start a game session!').toJSON()
];
const rest = new REST({ version: '10' }).setToken(token);

(async () => {
  try {
    await rest.put(Routes.applicationGuildCommands(clientId, guildId), { body: commands });
    console.log('Commands registered.');
  } catch (error) {
    console.error('Register commands error:', error);
  }
})();

// ==================== ุฌุงูุฒูุฉ ุงูุจูุช ====================
client.once('ready', () => {
  console.log(`Logged in as ${client.user.tag}`);
});

// ==================== ุชูุงุนู ูุน ุงูุฃูุงูุฑ ู ุงูุฃุฒุฑุงุฑ ====================
client.on('interactionCreate', async interaction => {
  try {
    // ุณูุงุด ูููุงูุฏ ุจุฏุก ููุจ ุงูุฃูุนุงุจ
    if (interaction.isChatInputCommand()) {
      if (interaction.commandName === 'startgames') {
        hostId = interaction.user.id;
        players = {};
        currentGame = null;
        currentQuestionIndex = 0;

        const buttons = new ActionRowBuilder()
          .addComponents(
            new ButtonBuilder().setCustomId('join_game').setLabel('ุงูุถูุงู').setStyle(ButtonStyle.Primary),
            new ButtonBuilder().setCustomId('start_game').setLabel('ุจุฏุก ุงููุนุจุฉ').setStyle(ButtonStyle.Success)
          );

        return interaction.reply({
          content: `๐ฎ **ููุจู ุงูุฃูุนุงุจ**\nุงููุถูู: <@${hostId}>\nุงููุงุนุจูู: ูุง ุฃุญุฏ\nุงุฎุชุฑ ูุฆุฉ ููุนุจ:`,
          components: [buttons]
        });
      }
    }

    // ุฃุฒุฑุงุฑ
    if (interaction.isButton()) {

      // ุงูุถูุงู ูุงุนุจ
      if (interaction.customId === 'join_game') {
        if (!players[interaction.user.id]) {
          players[interaction.user.id] = { name: interaction.user.username, points: 0 };
        }
        const playerNames = Object.values(players).map(p => p.name).join(', ') || 'None';
        return interaction.update({
          content: `๐ฎ **ููุจู ุงูุฃูุนุงุจ**\nุงููุถูู: <@${hostId}>\nุงููุงุนุจูู: ${playerNames}\nุงุฎุชุฑ ูุฆุฉ ููุนุจ:`,
          components: interaction.message.components
        });
      }

      // ุจุฏุก ุงุฎุชูุงุฑ ุงููุฆุฉ (ุงููุถูู ููุท)
      if (interaction.customId === 'start_game') {
        if (interaction.user.id !== hostId) return interaction.reply({ content: 'ููุท ุงููุถูู ูุณุชุทูุน ุงูุจุฏุก!', ephemeral: true });

        const gameNames = Object.keys(games);
        const rows = [];
        let currentRow = new ActionRowBuilder();

        for (let i = 0; i < gameNames.length; i++) {
          currentRow.addComponents(
            new ButtonBuilder().setCustomId(`play_${i}`).setLabel(gameNames[i]).setStyle(ButtonStyle.Primary)
          );
          if ((i + 1) % 5 === 0 || i === gameNames.length - 1) {
            rows.push(currentRow);
            currentRow = new ActionRowBuilder();
          }
        }

        return interaction.update({
          content: 'ุงุฎุชุฑ ูุฆุฉ ููุจุฏุก:',
          components: rows
        });
      }

      // ุงุฎุชุงุฑ ูุฆุฉ ููุนุจ
      if (interaction.customId.startsWith('play_')) {
        const idx = parseInt(interaction.customId.split('_')[1]);
        currentGame = Object.keys(games)[idx];
        currentQuestionIndex = 0;
        playerAnswered = {};
        // reset brasalfa state
        brasalfaImposterId = null;
        brasalfaTheme = null;
        brasalfaVotes = {};
        brasalfaVoteMessage = null;
        if (brasalfaTimerInterval) { clearInterval(brasalfaTimerInterval); brasalfaTimerInterval = null; }

        await interaction.update({ content: `๐ฎ ุจุฏุก ูุฆุฉ **${currentGame}**!`, components: [] });

        // ุฅุฐุง ุงููุฆุฉ ุจุฑุง ุงูุณุงููุฉุ ุงุจุฏุฃูุง ุจุฎุงุตูุฉูุง ุงูุฎุงุตุฉ
        if (currentGame === 'ุจุฑุง ุงูุณุงููุฉ') {
          return startBrasalfaRound(interaction.channel);
        } else {
          return sendQuestion(interaction.channel);
        }
      }

      // ุฅุฌุงุจุฉ ุนูู ุงูุฃูุนุงุจ ุงูุนุงุฏูุฉ
      if (interaction.customId.startsWith('answer_') && currentGame && currentGame !== 'ุจุฑุง ุงูุณุงููุฉ') {
        const player = players[interaction.user.id];
        if (!player) return interaction.reply({ content: 'ุฃูุช ูุณุช ูุดุงุฑูุงู ูู ุงููุนุจุฉ.', ephemeral: true });
        if (playerAnswered[interaction.user.id]) return interaction.reply({ content: 'ููุฏ ุฃุฌุจุช ุจุงููุนู ุนูู ูุฐุง ุงูุณุคุงู!', ephemeral: true });

        playerAnswered[interaction.user.id] = true;
        const question = games[currentGame][currentQuestionIndex];
        const chosenIndex = parseInt(interaction.customId.replace('answer_', ''), 10);
        const selectedAnswer = question.choices[chosenIndex];
        const correct = question.answer;

        if (selectedAnswer === correct) {
          player.points += 10;
          return interaction.reply({ content: `โ ุฅุฌุงุจุฉ ุตุญูุญุฉ! ููุงุทู ุงูุขู: ${player.points}`, ephemeral: true });
        } else {
          return interaction.reply({ content: `โ ุฅุฌุงุจุฉ ุฎุงุทุฆุฉ! ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ: **${correct}**`, ephemeral: true });
        }
      }

      // ุชุตููุช ุจุฑุง ุงูุณุงููุฉ
      if (interaction.customId.startsWith('vote_') && currentGame === 'ุจุฑุง ุงูุณุงููุฉ') {
        const voterId = interaction.user.id;
        const votedId = interaction.customId.replace('vote_', '');

        if (!players[voterId]) return interaction.reply({ content: 'ุฃูุช ูุณุช ูุดุงุฑูุงู ูู ุงููุนุจุฉ.', ephemeral: true });
        if (!players[votedId]) return interaction.reply({ content: 'ุงููุงุนุจ ุงููุตูุช ุนููู ุบูุฑ ููุฌูุฏ ุฃู ููุณุชุจุนุฏ.', ephemeral: true });
        if (brasalfaVotes[voterId]) return interaction.reply({ content: 'ููุฏ ุตูุชุช ุจุงููุนู!', ephemeral: true });

        brasalfaVotes[voterId] = votedId;
        await interaction.reply({ content: `โ ุชู ุชุณุฌูู ุตูุชู ุถุฏ **${players[votedId].name}**`, ephemeral: true });

        // ุฅู ุตูุช ูู ุงููุงุนุจูู ุงูุญุงูููู (ุจุงุณุชุซูุงุก ุญุงูุงุช ุงุณุชุจุนุงุฏ ูุญุชููุฉ) ูููู ุงูุฌููุฉ ููุฑุงู
        const aliveIds = Object.keys(players);
        const totalAlive = aliveIds.length;
        const votesCount = Object.keys(brasalfaVotes).length;
        if (votesCount >= totalAlive) {
          // ุฅุฐุง ุตูุช ุงูุฌููุน ููููู ุงูุฌููุฉ ุงูุขู
          await finishBrasalfaRound(interaction.channel);
        }
      }
    }
  } catch (err) {
    console.error('interaction error:', err);
    // ูุง ููุนูุฏ ุฅุฑุณุงู ุงุณุชุซูุงุก ูููุณุชุฎุฏู (ephemeral) ูุฃู ุจุนุถ ุงูุฃููุงุช ุงูุชูุงุนู ุงูุชูู
  }
});

// ==================== ุฅุฑุณุงู ุฃุณุฆูุฉ ุงููุฆุงุช ุงูุนุงุฏูุฉ ====================
async function sendQuestion(channel) {
  if (!currentGame) return channel.send('ูู ูุชู ุงุฎุชูุงุฑ ูุฆุฉ.');
  if (!games[currentGame]) return channel.send('ุงููุฆุฉ ุงููุญุฏุฏุฉ ุบูุฑ ููุฌูุฏุฉ.');

  if (currentQuestionIndex >= games[currentGame].length) {
    // ุฅุนูุงู ูุชุงุฆุฌ ุงููุฆุฉ
    const results = Object.values(players).map(p => `${p.name}: ${p.points} pts`).join('\n') || 'ูุง ููุฌุฏ ูุงุนุจูู';
    await channel.send(`๐ **ุงูุชูุช ุงููุฆุฉ!**\n${results}`);

    // ุฅุนูุงู ูุงุฆุฒ ุงูุฃุนูู ููุงุท
    const arr = Object.values(players);
    if (arr.length > 0) {
      const top = arr.reduce((a,b) => (a.points > b.points ? a : b));
      await channel.send(`๐ **${top.name}** ูุงุฆุฒ ุงููุฆุฉ!`);
    }

    // ุฅุนุงุฏุฉ ุชููุฆุฉ ูุชูุงุถุนุฉ
    players = {}; hostId = null; currentGame = null; currentQuestionIndex = 0;
    return;
  }

  // ุฅุฑุณุงู ุงูุณุคุงู ุงูุญุงูู
  playerAnswered = {};
  const question = games[currentGame][currentQuestionIndex];
  const rows = [];
  let row = new ActionRowBuilder();

  // ูุณุชุฎุฏู index ูู customId ูุชุฌูุจ ูุดุงูู ุงููุตูุต/ุฅูููุฌู
  for (let i = 0; i < question.choices.length; i++) {
    row.addComponents(
      new ButtonBuilder()
        .setCustomId(`answer_${i}`)
        .setLabel(question.choices[i])
        .setStyle(ButtonStyle.Primary)
    );
    if ((i+1) % 5 === 0 || i === question.choices.length - 1) {
      rows.push(row);
      row = new ActionRowBuilder();
    }
  }

  await channel.send({ content: `โ ${question.question}\nโณ ูุฏูู 10 ุซูุงูู ููุฅุฌุงุจุฉ!`, components: rows });

  if (currentTimeout) clearTimeout(currentTimeout);
  currentTimeout = setTimeout(() => {
    currentQuestionIndex++;
    sendQuestion(channel);
  }, 10000);
}

// ==================== ุจุฏุก ุฌููุฉ ุจุฑุง ุงูุณุงููุฉ ====================
async function startBrasalfaRound(channel) {
  const playerIds = Object.keys(players);
  if (playerIds.length < 3) {
    await channel.send('โ ูุฌุจ ุฃู ูููู ููุงู ุนูู ุงูุฃูู 3 ูุงุนุจูู ููุนุจ "ุจุฑุง ุงูุณุงููุฉ".');
    return;
  }

  // ุชููุฆุฉ ุงูุฃุตูุงุช/ุงููุชุบูุฑุงุช
  brasalfaVotes = {};
  if (brasalfaTimerInterval) { clearInterval(brasalfaTimerInterval); brasalfaTimerInterval = null; }

  // ุงุฎุชูุงุฑ ุงููุฎุงุฏุน ุนุดูุงุฆูุงู
  brasalfaImposterId = playerIds[Math.floor(Math.random() * playerIds.length)];

  // ุงุฎุชูุงุฑ ุงูููุถูุน ุนุดูุงุฆูุงู
  brasalfaTheme = BRASALFA_THEMES[Math.floor(Math.random() * BRASALFA_THEMES.length)];

  // ุฅุฑุณุงู DM ูููุงุนุจูู ุงูุฐูู ูุนุฑููู ุงูููุถูุน (ูู ุงููุงุนุจูู ูุง ุนุฏุง ุงููุฎุงุฏุน)
  for (const id of playerIds) {
    if (id === brasalfaImposterId) continue; // ูุง ูุจุนุซ ูููุฎุงุฏุน
    try {
      const user = await client.users.fetch(id);
      await user.send(`๐ ููุถูุน "ุจุฑุง ุงูุณุงููุฉ": **${brasalfaTheme}**\n(ูุฐุง ุณุฑูู โ ูุง ุชุฎุจุฑ ุงููุฎุงุฏุน!)`);
    } catch (err) {
      // ูุดู ุฅุฑุณุงู DM: ูุนูู ุงููุถูู ููู ูุชุฃูุฏ ูู ุชูุนูู ุงูุฑุณุงุฆู ุงูุฎุงุตุฉ ููุงุนุจ
      console.warn(`Failed to DM ${id}:`, err.message);
      try {
        await channel.send(`<@${id}> ูู ูุชููู ุงูุจูุช ูู ุฅุฑุณุงู ุฑุณุงูุฉ ุฎุงุตุฉ ูู. ุงุทูุจ ููู ุชูุนูู ุงูุฑุณุงุฆู ุงูุฎุงุตุฉ (DM).`);
      } catch {}
    }
  }

  // ูุนูู ุงู ุงููุนุจุฉ ูุฏ ุจุฏุฃุช (ูุฐูุฑ ุนุฏุฏ ุงููุงุนุจููุ ููู ูุง ูุฐูุฑ ุงูููุถูุน)
  await channel.send(`๐ฒ **ุจุฑุง ุงูุณุงููุฉ**: ุงููุนุจุฉ ุจุฏุฃุช!\nููุงู ูุฎุงุฏุน ูุงุญุฏ ุจูู ${playerIds.length} ูุงุนุจูู. ุงุจุฏุฃ ุงูุชุตููุช ููุนุฑูุฉ ูู ุงููุฎุงุฏุน.\n(ุงูููุถูุน ููุฑุณูู ุณุฑููุงู ููุงุนุจูู ุบูุฑ ุงููุฎุงุฏุน)`);

  // ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุงููุฑ (ุณุชูุญุฏูุซ ูู 10 ุซูุงูู)
  brasalfaTimerValue = 300;
  brasalfaVoteMessage = await channel.send(`โณ ุงูููุช ุงููุชุจูู: ${brasalfaTimerValue}s`);

  // ุฅุฑุณุงู ุฃุฒุฑุงุฑ ุงูุชุตููุช (ุฃุณูุงุก ุงููุงุนุจูู ุงูุญููู)
  const voteRows = [];
  let row = new ActionRowBuilder();
  for (let i = 0; i < playerIds.length; i++) {
    const pid = playerIds[i];
    row.addComponents(
      new ButtonBuilder().setCustomId(`vote_${pid}`).setLabel(players[pid].name).setStyle(ButtonStyle.Danger)
    );
    if ((i+1) % 5 === 0 || i === playerIds.length - 1) {
      voteRows.push(row);
      row = new ActionRowBuilder();
    }
  }
  await channel.send({ content: '๐ณ๏ธ ุตูุช ุงูุขู: ุงุฎุชุฑ ูู ุชุนุชูุฏ ุฃูู ุงููุฎุงุฏุน', components: voteRows });

  // ุจุฏุก ุงูุฅูุชุฑูุงู ูุชุญุฏูุซ ุงูุชุงููุฑ ูู 10 ุซูุงูู
  brasalfaTimerInterval = setInterval(async () => {
    brasalfaTimerValue -= 10;
    if (brasalfaVoteMessage && !brasalfaVoteMessage.deleted) {
      try {
        await brasalfaVoteMessage.edit(`โณ ุงูููุช ุงููุชุจูู: ${brasalfaTimerValue}s`);
      } catch (_) {}
    }
    if (brasalfaTimerValue <= 0) {
      clearInterval(brasalfaTimerInterval);
      brasalfaTimerInterval = null;
      await finishBrasalfaRound(channel);
    }
  }, 10000);
}

// ==================== ุฅููุงุก ุฌููุฉ ุจุฑุง ุงูุณุงููุฉ (ุจูุง ูู ุฐูู ุงูุงุณุชุจุนุงุฏ ุฃู ุงูููุฒ) ====================
async function finishBrasalfaRound(channel) {
  // ุฅููุงู ุงูุฅูุชุฑูุงู ุฅู ูุงู ุดุบุงูุง
  if (brasalfaTimerInterval) { clearInterval(brasalfaTimerInterval); brasalfaTimerInterval = null; }

  // ุฅุจุทุงู ุฃุฒุฑุงุฑ ุงูุชุตููุช (ุฅุฐุง ููุง ูุญุชูุธ ุจุฑุณุงูุฉ ุงูุงุตูุงุช)
  try {
    // ูุจุญุซ ุฃุฎุฑ ุฑุณุงูุฉ ุชุญุชูู ุนูู ุฃุฒุฑุงุฑ (ูุฏ ูุง ููุชูู ุงููุฑุฌุน ูู ุจุนุถ ุงูุญุงูุงุช)ุ ูุฐุง ูุญุงูู ุชุญุฑูุฑ brasalfaVoteMessage ุฅุฐุง ููุฌูุฏ
    if (brasalfaVoteMessage) {
      const msg = await channel.messages.fetch(brasalfaVoteMessage.id).catch(() => null);
      if (msg) {
        // ููุนุทููู ูู ุงูููููุงุช
        const disabled = msg.components.map(row => {
          // ููู ุฒุฑ ููุณุฎ ูุถุนู ูู disabled
          const newRow = ActionRowBuilder.from(row);
          newRow.components = newRow.components.map(c => ButtonBuilder.from(c).setDisabled(true));
          return newRow;
        });
        await msg.edit({ components: disabled }).catch(() => {});
      }
    }
  } catch (err) {
    // ุชุฌุงูู ุงูุฃุฎุทุงุก ุนูุฏ ุชุนุทูู ุงูุฃุฒุฑุงุฑ
    console.warn('Failed to disable vote buttons:', err.message);
  }

  // ุฅุฐุง ูู ูุตููุช ุฃุญุฏ => ุงููุงุนุจูู ูููุฒูู
  if (Object.keys(brasalfaVotes).length === 0) {
    await channel.send(`โ ูู ูุตููุช ุฃุญุฏ. **ุงููุงุนุจูู ูููุฒูู!** ุงููุฎุงุฏุน ูุงู: **${players[brasalfaImposterId].name}**`);
    // ุฅุนุงุฏุฉ ุงูุชููุฆุฉ ุงูููุงุฆูุฉ
    players = {}; hostId = null; currentGame = null; currentQuestionIndex = 0;
    brasalfaImposterId = null; brasalfaTheme = null; brasalfaVotes = {}; brasalfaVoteMessage = null;
    return;
  }

  // ุนุฏู ุงูุฃุตูุงุช
  const counts = {}; // votedId -> count
  for (const voter in brasalfaVotes) {
    const voted = brasalfaVotes[voter];
    if (!counts[voted]) counts[voted] = 0;
    counts[voted]++;
  }

  // ูู ุญุตู ุนูู ุฃุนูู ุฃุตูุงุช
  let max = 0;
  let topId = null;
  for (const id in counts) {
    if (counts[id] > max) { max = counts[id]; topId = id; }
  }

  // ุฅุฐุง ุงูุฃูุซุฑ ุฃุตูุงุช ูู ุงููุฎุงุฏุน => ูููุฒ ุงููุงุนุจูู
  if (topId && topId === brasalfaImposterId) {
    await channel.send(`๐ ุงููุงุนุจูู ุงูุชุดููุง ุงููุฎุงุฏุน! ุงููุฎุงุฏุน ูุงู: **${players[brasalfaImposterId].name}**`);
    // ุฅุนุงุฏุฉ ุชููุฆุฉ ุงููุนุจุฉ
    players = {}; hostId = null; currentGame = null; currentQuestionIndex = 0;
    brasalfaImposterId = null; brasalfaTheme = null; brasalfaVotes = {}; brasalfaVoteMessage = null;
    return;
  }

  // ุฎูุงู ุฐูู: ููุณุชุจุนุฏ ุงููุงุนุจ ุงููุตูุช ุนููู (topId) ูู ุงููุนุจุฉุ ูุชุณุชูุฑ ุงููุนุจุฉ
  if (topId && players[topId]) {
    const eliminatedName = players[topId].name;
    // ูุญุฐู ุงููุงุนุจ ูู ุงููุงุฆูุฉ
    delete players[topId];

    await channel.send(`๐ป ุชู ุงุณุชุจุนุงุฏ ุงููุงุนุจ **${eliminatedName}** (ูู ููู ุงููุฎุงุฏุน). ุงููุนุจุฉ ุชุณุชูุฑ...`);

    // ุฅุฐุง ุจูู ููุท ุงููุฎุงุฏุน ูุขุฎุฑ ูุงุญุฏ => ุงููุฎุงุฏุน ูููุฒ
    const remainingIds = Object.keys(players);
    if (remainingIds.length <= 2) {
      // ุฅุฐุง ุชุจูู 2 ุฃู ุฃูู (ุนุงุฏุฉ ุงููุฎุงุฏุน + ูุงุนุจ ูุงุญุฏ) ูุนุชุจุฑ ุงููุฎุงุฏุน ูุงุฆุฒุงู
      await channel.send(`๐ ุงููุฎุงุฏุน ูููุฒ! ุงููุฎุงุฏุน ูุงู: **${players[brasalfaImposterId] ? players[brasalfaImposterId].name : 'ูุฌููู'}**`);
      // ุฅุนุงุฏุฉ ุชููุฆุฉ
      players = {}; hostId = null; currentGame = null; currentQuestionIndex = 0;
      brasalfaImposterId = null; brasalfaTheme = null; brasalfaVotes = {}; brasalfaVoteMessage = null;
      return;
    }

    // ุบูุฑ ุฐูู: ูุจุฏุฃ ุฌููุฉ ุฌุฏูุฏุฉ ุจููุณ ุงููุฎุงุฏุน ูููุณ ุงูููุถูุน ูุน ุงููุงุนุจูู ุงููุชุจููู
    brasalfaVotes = {};
    brasalfaVoteMessage = null;
    // ูุจุนุซ ุงูููุถูุน ุณุฑููุงู ููุงุนุจูู ุงููุชุจููู (ูุง ุนุฏุง ุงููุฎุงุฏุน)
    for (const id of remainingIds) {
      if (id === brasalfaImposterId) continue;
      try {
        const user = await client.users.fetch(id);
        await user.send(`๐ [ุฌููุฉ ุฌุฏูุฏุฉ] ููุถูุน "ุจุฑุง ุงูุณุงููุฉ": **${brasalfaTheme}**`);
      } catch (err) {
        // ุชุฌุงูู ูุดููุฉ DM
      }
    }

    // ูุนุฑุถ ุฑุณุงูุฉ ุชูุถูุญูุฉ ุซู ูุฑุณู ุฃุฒุฑุงุฑ ุชุตููุช ุฌุฏูุฏุฉ ููุนูุฏ ุงูุชุงููุฑ
    await channel.send(`๐ ุฌููุฉ ุฌุฏูุฏุฉ: ุงุจุฏุฃูุง ุงูุชุตููุช ูุฑุฉ ุฃุฎุฑู ูุงุณุชุจุนุงุฏ ุงููุฎุงุฏุน.\n(ุงูููุถูุน ูุง ุฒุงู: ุณุฑูู ูุฏู ุงููุงุนุจูู ุบูุฑ ุงููุฎุงุฏุน)`);

    // ุฅุฑุณุงู ุฒุฑ ุงูุชุตููุช ุงูุฌุฏูุฏ
    const newVoteRows = [];
    let row = new ActionRowBuilder();
    let i = 0;
    for (const pid of remainingIds) {
      row.addComponents(new ButtonBuilder().setCustomId(`vote_${pid}`).setLabel(players[pid].name).setStyle(ButtonStyle.Danger));
      i++;
      if (i % 5 === 0) { newVoteRows.push(row); row = new ActionRowBuilder(); }
    }
    if (row.components && row.components.length > 0) newVoteRows.push(row);
    brasalfaVoteMessage = await channel.send({ content: '๐ณ๏ธ ุตูุช ุงูุขู (ุฌููุฉ ุฌุฏูุฏุฉ)', components: newVoteRows });

    // ุฅุนุงุฏุฉ ุชุดุบูู ุงูุชุงููุฑ
    brasalfaTimerValue = 180;
    const timerMsg = await channel.send(`โณ ุงูููุช ุงููุชุจูู: ${brasalfaTimerValue}s`);
    brasalfaTimerInterval = setInterval(async () => {
      brasalfaTimerValue -= 10;
      try { await timerMsg.edit(`โณ ุงูููุช ุงููุชุจูู: ${brasalfaTimerValue}s`); } catch {}
      if (brasalfaTimerValue <= 0) {
        clearInterval(brasalfaTimerInterval);
        brasalfaTimerInterval = null;
        await finishBrasalfaRound(channel);
      }
    }, 10000);
    return;
  } else {
    // ูุง ููุฌุฏ topId (ูุงุฏุฑุฉ) -> ูุนูู ุชุนุงุฏู/ูุง ูุงุฆุฒ -> ูุนูุฏ ุงูุชููุฆุฉ
    await channel.send('โ ุชุนุฐูุฑ ุชุญุฏูุฏ ูุงุนุจ ูุตููุช ุนููู - ุชููู ุงูุฌููุฉ ุจุฏูู ูุงุฆุฒ ูุงุถุญ.');
    players = {}; hostId = null; currentGame = null; currentQuestionIndex = 0;
    brasalfaImposterId = null; brasalfaTheme = null; brasalfaVotes = {}; brasalfaVoteMessage = null;
    return;
  }
}

// ==================== ุชุณุฌูู ุงูุฏุฎูู ููุจูุช ====================
client.login(token);
